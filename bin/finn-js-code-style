#!/usr/bin/env node
var semver = require('semver');
var yargs = require('yargs');
var cli = require('../lib/cli.js');

var MIN_NON_OPTIONS = 1;
var EXTRA_INFO = [
    'Use the .eslintrc file for eslint config',
    'Use the .eslintignore to exclude files or folders'
].join('\n');

var NODE_VERSION = semver.clean(process.version);
if (!semver.satisfies(NODE_VERSION, '>=4.0.0')) {
    console.error('finn-js-code-style requires Node.js 4.x or newer. You have %s installed.', NODE_VERSION);
    process.exit(1);
}

var argv = yargs
    .usage('Usage: finn-js-code-style [options] <file | dir>...')
    .demand(MIN_NON_OPTIONS)
    .options({
        config: {
            alias: 'c',
            describe: 'Specify config instead of using the .eslintrc default',
            type: 'string'
        },
        env: {
            describe: 'specify environments',
            type: 'string'
        },
        fail: {
            default: false,
            describe: 'shortcut for --max-errors 0 --max-warnings 0',
            type: 'boolean'
        },
        E: {
            alias: 'max-errors',
            describe: 'exit with err code when exceeding max-errors'
        },
        W: {
            alias: 'max-warnings',
            describe: 'exit with err code when exceeding max-warnings'
        }
    })
    .help('help')
    .example('finn-js-code-style lib')
    .epilog(EXTRA_INFO)
    .argv;

argv.files = argv._;
if (argv.fail) {
    argv.maxErrors = argv.E = 0;
    argv.maxWarnings = argv.W = 0;
    delete argv.fail;
}

cli(argv);
